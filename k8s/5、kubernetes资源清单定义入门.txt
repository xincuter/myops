第五节：k8s资源清单定义入门

RESTful api：
	GET，PUT，DELETE，POST...
	kubectl run,get,edit...
	
资源：对象
资源类型：
	名称空间级别资源：
		workload（工作负载）：pod，deployment，replicaset，statefulset，daemonset，job，cronjob，...
		服务发现及均衡：service，ingress，...
		配置与存储：volume，CSI
			configmap，secret
			downwardapi
	
	集群级别资源：
		namespace、node、role、clusterrole、rolebinding、clusterrolebing
	
	元数据型资源：
		HPA、PodTemplate、LimitRange
		
	......
	

使用资源清单格式定义资源，例如：我们可以使用命令来获取pod的资源定义yaml配置
kubectl get pod <pod_name> -n <namespace> -o yaml   ##获取pod资源的yaml配置文档


创建资源的方法：
	apiserver仅接收JSON格式的资源定义；
	yaml格式提供配置清单，apiserver可自动将其转为json格式，而后再提交执行；

大部分资源的配置清单格式：
	apiVersion：group/version (如果group组名省略，表示pod资源)
		可以使用kubectl api-version来获取支持的所有组名/版本
	Kind：资源类型
	metadata：元数据
		name：名称
		namespace：所属名称空间
		labels：标签
		annotations：注解
		uid：唯一标识，一般不用定义，会自动生成
		......
		
		每个的资源的引用PATH：/api/<group>/<vervison>/namespaces/<namespace>/<type>/<name>

	spec：定义资源期望状态，disired state
	
	status：当前状态，current status，本字段由kubernetes集群维护
	
	
	k8s有内建的格式说明：
		kubectl explain <资源类型>    ##查询某类资源该如何定义的帮助信息
		kubectl explain pods.metadata  ##表示查询pods资源的metadata字段该如何定义的帮助信息
		kubectl explain pods.spec.containers 
			livenessprobe：存活性探测定义
			readnessprobe：就绪性探测定义
		...
		
同一个pod中的多个容器，虽然在一个pod中，但是相互隔离。
		
##示例：使用yaml资源清单格式定义个pod资源
apiVersion: v1
kind: Pod
metadata: 
    name: pod-demo
    namespace: default
    labels:                         ##labels是个json数组，可以定义多个
        app: myapp
        tier: frontend
spec:
    containers:                     ##最重要字段，且是一个列表
    - name: nginx
      image: nginx:latest
    - name: busybox
      image: busybox:latest
      command:
      - "/bin/sh"
      - "-c"
      - "sleep 3600"