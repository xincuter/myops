54_01、企业级监控系列之一---snmp原理和实战

network monitoring

一台主机监控几十台甚至上千台服务器或主机


开源实现网络监控工具：
SNMP【简单网络管理协议】
RRDTool：绘图工具
cacti：强大的展示引擎，php脚本，调用RRDTool
       必须是跟时间序列相关的
nagios：专门监控服务有效状态，发生状态改变即通知管理员【可以结合SNMP使用】


监控主机【通常被称为NMS】

原理：NMS通过某种机制定期到被监控的主机上获取监控信息，并保存至本地某个文件总去，并通过某种方式（报警器）读取该信息文件，以邮件方式发送给管理员。



SNMP（简单网络管理协议）
可以通过简单操作实现监控远程主机上的服务资源、系统信息等等

version：
SNMPv1：安全基于community，建立认证，community的名字是认证密码
        community：共三种，分别是read-only、read-write、trap（被监控端主动发送notify给监控端）
	被监控端需要安装服务进程agent，接收服务端发送的指令

SNMPv2：跟v1差不多，只是功能增强些

SNMPv3：增强了安全机制

【目前最流行的还是SNMPv1】


manager：NMS


MIBS
MIB(manager information base)：管理数据库，MIB中保存的就是被监控对象的OID和名称的映射表。

OID：对象标识符，唯一定义一台被监控的设备或被监控设备的某项资源

一般采用名称和OID一一对应，方便记忆和引用

监控主机资源必须依赖于MIB库，被监控对象上安装的agent都会提供MIB库文件（类似于dns的域数据文件）


目前常用的MIB是MIB-II


能够实现的网络监控类型：
fault management
configuration management
accounting management（记账管理）
performance management（性能管理）
security management


监控怎么实现？
运行SNMP，被监控端主动打开udp的161和tcp的199端口，实时接收监控端的查询请求，而监控端被动打开UDP 162端口（接收trap报文）


对于任意主机，启用snmp功能，都会有两个内置的community，分别是public（read-only）和private（read-write），为了安全考虑，会关闭private


MIB库也是分层管理的

MIB文件是纯ASCII码


SNMP的报文：
get
getnext
getbulk（snmpv2和snmpv3）
set
trap
getresponse
notification（snmpv2和snmpv3）
inform （snmpv2和snmpv3）
report （snmpv2和snmpv3）



snmp的简单操作：

snmp软件包：
net-snmp（Agent，被监控端装）
net-snmp-utils（NMS，若想要接收trap报文，上面的包NMS也要装）

linux主机上如何启用snmp？

首先查看是否安装了上述snmp的软件包，若没有安装使用【yum install net-snmp net-snmp-utils】

启用snmp：/etc/init.d/snmpd start
若要启用snmp的trap功能：/etc/init.d/snmptrapd start

snmp的配置文件：
agent端用：
/etc/snmp/snmpd.conf
/etc/sysconfig/snmpd

NMS用：
/etc/snmp/snmptrapd.conf
/etc/sysconfig/snmptrapd

MIB库文件目录：
/usr/share/snmp/mibs/


如何在配置文件/etc/snmp/snmpd.conf中定义监控端能获取哪些信息？【即添加或删除MIB库】
【在配置文件中view行，添加或者修改即可】


定义community：
在配置文件中有以下内容：
#       sec.name  source          community
com2sec notConfigUser  default       public
【其中的default表示谁能够从本主机上获取信息，public表示community的名字，为了安全起见，修改此条目】

修改例子：
com2sec notConfigUser  127.0.0.1      mypublic
【以上信息表示只允许172.0.0.1获取本机的信息，community名称为mypublic】

命令1：
snmpwalk ---获取目标主机MIB库信息【监控命令】
       -v：指定snmp版本
       -c：指定community类型【默认是public】
    例子：snmpwalk -v 2c -c public localhost


命令2：
snmpget ---获取目标主机指定OID资源信息
    例子：snmpget -v 2c -c public localhost + 指定OID【格式是MIB库::属性值】；如：HOST-RESOURCES-MIB::hrSystemUptime.0


MIB库是一个树形结构
subtree


命令3：
snmpnetstat  ---通过SNMP从远程主机上获取状态连接信息【即tcp、udp端口情况】
       -v：指定snmp版本
       -c：指定community类型【默认是public】 
       -Ca：指定显示格式
       -Cp：指定协议
       -n：以数字格式显示
例子：snmpnetstat -v 2c -c mypublic -Ca -Cp tcp 172.16.100.1 




RRDtool工具：
round robin database tool：轮状数据库，数据库文件以.rrd结尾；以时间序列保存数据，每个数据都有一个时间戳
RRA：round robin archive
PDP：primary data point，主数据节点，多个PDP组成一个分组，然后取平均值，这个叫做CDP，多个CDP聚合取平均值就叫做RRA。
CDP：聚合节点

解析度

rrd文件：【可以保存两个数据源（DS）】



创建轮转数据库：
命令6：
rrdtool ---创建轮转数据库
   语法格式：rrdtool +子命令 +文件路径 +选项
	     选项：
             --start|-b：指定起始时间
             --step|-s step：指定时间跨度
             DS:ds-name:DST:dst-argument 
             RRA:CF:cf arguments【CF是聚合函数：有average、max、min、last】
   子命令：
       create：创建空库
       graph：绘图
       dump：导出数据
       update：指定想某个rrd文件添加数据
            语法格式：rrdtool update test.rrd 
timestamp:value1:value2【vlaue1和2分别对应两个DS】
       fetch:查看数据       

DST（数据源类型）：
    GAUGE:保存数值原值
    COUNTER:保存相对值，相对于上一个值，必须值递增
    DERIVE:类似于COUNTER，但是值可以是递增或递减
    ABSOLUTE:相对于初始值而言，减去初始值
    COMPUTE:需要计算

DST-arguments：
hearbeat：指定数据接收时间间隔【若指定时间内未到来，被标记为UNKNOW】
min：定义时间槽的最小值【U表示值未定】
max：定义时间槽的最大值

RRA：定义DS如何聚合的
cf-argumrnts:
xff：定义聚合函数中pdp超过多大比例UNKNOW就定义为UNKNOW
steps：定义聚合函数由几个pdp聚合而成
rows：定义保存多少个steps定义的平均值

       
例子：
初始值：1
数据为：2369
GAUGE:2369
COUNTER:2133
DERIVE:2133
ABSOLUTE:1258


例子：
rrdtool create test.rrd --step 5 DS:testds:GAUGE:8:0:U RRA:AVERAGE:0.5:1:17280 RRA:AVERAGE:0.5:10:3456
RRA:AVERAGE:0.5:100:1210

rrdtool update test.rrd N:$RANDOM

rrdtool graph  + 图片名称 -s +时间戳 -t Test -v vtest DEF:vtest=test.rrd:testds:AVERAGE LINE1:vartest#FF0000:"testline"【-s 开始时间，-e 结束时间，-t指定title，-v指定纵向title,DEF指定取得数据的变量名;绘一条线】

【首先需要安装rrdtool包】



54_02、企业级监控之二------rrd-tool绘图原理和应用

cacti就是一个支持模板的，rrd画图工具的前端展示工具

