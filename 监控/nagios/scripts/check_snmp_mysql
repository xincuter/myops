#!/bin/bash
#script-name:check_snmp_mysql
#descrition:The script is in order to check MYSQL(IO,SQL,STATUS)...
#auth: by zhengxin 20160509   email: zhengxin@cnwisdom.com

STATE_OK=0
STATE_WARNING=1
STATE_CRITICAL=2
STATE_UNKNOWN=3

check_command=/usr/bin/snmpwalk

MYSQL_STATUS_OID=".1.3.6.1.4.1.8072.1.3.2.4.1.2.14.100.98.45.114.101.112.108.105.99.97.116.105.111.110.3"
MYSQL_IO_OID=".1.3.6.1.4.1.8072.1.3.2.4.1.2.14.100.98.45.114.101.112.108.105.99.97.116.105.111.110.1"
MYSQL_SQL_OID=".1.3.6.1.4.1.8072.1.3.2.4.1.2.14.100.98.45.114.101.112.108.105.99.97.116.105.111.110.2"


if [ ! -x $check_command ];then
        echo "sorry,you must install snmp on monitor-server..."
        exit $STATE_UNKNOW
fi

#define help-information
function help {
        echo -e "descriton:This plugin is used to check remote-server disk-space usage of partitions."
        echo -e "-h\t\tprint help-information"
        echo -e "-H\t\tdefine remote-server's hostname or ip-address."
}

if [ $# -eq 0 ];then
        echo "usage:{-h|--help|-H|-w|-c}..."
        exit 8
fi

#parameter-define
while [ $# -gt 0 ];do
        case $1 in

          -h|--help)
                help
                exit $STATE_OK
                ;;
          -H)
                HOSTADDRESS=$2
                shift 2
		if [ ! -z $HOSTADDRESS ];then
                	if ! ping -c3 $HOSTADDRESS &>/dev/null;then
                        	echo "the host is not exist,please checking..."
                        	exit $STATE_UNKNOWN
                	fi
		else
                        echo "host-address is not empty..."
                        exit $STATE_UNKNOWN
                fi
                ;;
           *)
                echo "no such parameter..."
		exit 7
                ;;
        esac
done

MYSQL_STATUS=`$check_command -c cnwisdompublic2016 -v 1 -t 5 $HOSTADDRESS $MYSQL_STATUS_OID | sed -r "s#.*STRING:[[:space:]]+(.*)#\1#g" | sed "s#[[:space:]]##g"` 
MYSQL_IO=`$check_command -c cnwisdompublic2016 -v 1 -t 5 $HOSTADDRESS $MYSQL_IO_OID | sed -r "s#.*STRING:[[:space:]]+(.*)#\1#g" | sed "s#[[:space:]]##g"`
MYSQL_SQL=`$check_command -c cnwisdompublic2016 -v 1 -t 5 $HOSTADDRESS $MYSQL_SQL_OID | sed -r "s#.*STRING:[[:space:]]+(.*)#\1#g" | sed "s#[[:space:]]##g"`

if [ $? -ne 0 ];then
	echo "No Response from remote-server..."
	exit $STATE_UNKNOWN
fi

if [ "$MYSQL_STATUS" == "alive" ];then
	if [ -z "$MYSQL_IO" ] && [ -z "$MYSQL_SQL" ];then
		echo -e "MYSQL_STATUS:\t${MYSQL_STATUS}\t\tno mysql-replication..."
		exit $STATE_OK
	elif echo $MYSQL_IO | grep -iE "^(no)+$" &>/dev/null && echo $MYSQL_SQL | grep -iE "^(no)+$" &>/dev/null;then
		echo -e "MYSQL_STATUS:\t${MYSQL_STATUS}\t\tMYSQL_IO:\t${MYSQL_IO}\t\tMYSQL_SQL:\t${MYSQL_SQL}"
		exit $STATE_CRITICAL
	elif echo $MYSQL_IO | grep -iE "^(yes)+$" &>/dev/null && echo $MYSQL_SQL | grep -iE "^(yes)+$" &>/dev/null;then
		echo -e "MYSQL_STATUS:\t${MYSQL_STATUS}\t\tMYSQL_IO:\t${MYSQL_IO}\t\tMYSQL_SQL:\t${MYSQL_SQL}"
		exit $STATE_OK
	else 
		echo -e "MYSQL_STATUS:\t${MYSQL_STATUS}\t\tMYSQL_IO:\t${MYSQL_IO}\t\tMYSQL_SQL:\t${MYSQL_SQL}"
		exit $STATE_WARNING
	fi	
elif [ x"$MYSQL_STATUS" == x"" ];then
	echo "mysql-daemon check is empty..."
	exit $STATE_UNKNOWN
else
	echo "mysql-daemon is stopped..."
	exit $STATE_CRITICAL
		
fi
